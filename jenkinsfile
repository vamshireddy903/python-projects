pipeline {
    agent any

    environment {
        IMAGE_NAME = 'vamsi011/python-app'
        TAG        = "V1.0.${BUILD_NUMBER}"
        FULL_IMAGE = "${IMAGE_NAME}:${TAG}"
    }

    stages {

        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/vamshireddy903/python-projects.git'
            }
        }

        stage('Docker Image Build') {
            steps {
                sh '''
                    echo "Cleaning up old Docker images (except kindest/node)..."
                    docker images --format "{{.Repository}}:{{.Tag}}" \
                    | grep -v "kindest/node" \
                    | grep "vamsi011/python-app" \
                    | xargs -r docker rmi -f || echo "No old images to remove"

                    echo "Building new Docker image: ${FULL_IMAGE}"
                    docker build -f docker/Mydockerfile -t ${FULL_IMAGE} .
                '''
            }
        }

        stage('Docker Image Push') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'dockerhub',
                    usernameVariable: 'dockeruser',
                    passwordVariable: 'dockerpass')]) {

                    sh '''
                        echo "$dockerpass" | docker login -u "$dockeruser" --password-stdin
                        echo "Docker Login successful"
                        docker push ${FULL_IMAGE}
                    '''
                }
            }
        }

        stage('Update Manifests & Push to GitHub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'github',
                    usernameVariable: 'GIT_USER',
                    passwordVariable: 'GIT_TOKEN')]) {

                    sh '''
                        echo "Updating deployment.yaml with new image: ${FULL_IMAGE}"
                        sed -i "s|image:.*|image: ${FULL_IMAGE}|" manifests/deployment.yaml

                        git config --global user.email "devops@automation.com"
                        git config --global user.name "Jenkins Automation"

                        git add manifests/deployment.yaml
                        git diff-index --quiet HEAD || git commit -m "Update image to ${FULL_IMAGE} [skip ci]"

                        git push https://$GIT_USER:$GIT_TOKEN@github.com/vamshireddy903/python-projects.git
                    '''
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: 'kubernetes', variable: 'KUBECONFIG')]) {
                    sh '''
                        echo " Cleaning up old Kubernetes pods..."
                        kubectl delete pods --all --ignore-not-found=true

                        echo "Deploying to Kubernetes..."
                        kubectl apply -f manifests/deployment.yaml
                        kubectl apply -f manifests/service.yaml

                        echo "Deployment successful"
                    '''
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline finished for build #${BUILD_NUMBER}"
        }
        success {
            echo "✅ Pipeline completed successfully"
        }
        failure {
            echo "❌ Pipeline failed"
        }
    }
}
